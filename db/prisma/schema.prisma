generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  INITIAL // on create
  REDIRECTED
  AUTHORIZATION_REQUESTED
  AUTHORIZED
  CAPTURE_REQUESTED
  CAPTURED
  REFUND_REQUESTED
  REFUNDED
  FAILED
  IN_REVIEW
  CANCELLED
}

enum States {
  DEFAULT
  PROCESSING
}

enum Modes {
  SALE
  PRE_AUTHORIZATION
  FINAL_AUTHORIZATION
}

enum PaymentOptions {
  WORLDLINE_CREDITCARD
  HOSTED_AND_APMS
  REDIRECT_WORLDLINE
}

model payments {
  id                   String         @id @default(uuid())
  authMode             Modes
  paymentOption        PaymentOptions
  paymentId            String
  hostedTokenizationId String?
  worldlineId          String
  worldlineStatus      String         @db.VarChar(255)
  worldlineStatusCode  Int
  storeId              String         @db.VarChar(255)
  cartId               String         @db.VarChar(255)
  orderId              String         @db.VarChar(255)
  currency             String         @db.VarChar(255)
  total                Int
  status               Status         @default(INITIAL)
  state                States         @default(DEFAULT)
  storePermanently     Boolean        @default(false)
  errors               String?        @db.Text
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
}

model payment_references {
  id          String   @id @default(uuid())
  storeId     String   @db.VarChar(255)
  version     Int
  referenceId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique(storeId)
}

model customer_payment_tokens {
  id               String   @id @default(uuid())
  customerId       String
  paymentId        String
  paymentProductId Int
  title            String
  token            String   @db.VarChar(255)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
